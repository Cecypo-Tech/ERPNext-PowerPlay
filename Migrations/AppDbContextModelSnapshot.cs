// <auto-generated />
using System;
using ERPNext_PowerPlay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERPNext_PowerPlay.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("ERPNext_PowerPlay.Models.Cred", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CredListID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CredListID");

                    b.ToTable("Creds");
                });

            modelBuilder.Entity("ERPNext_PowerPlay.Models.CredList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("ERPNext_PowerPlay.Models.PrinterSetting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Compact")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Copies")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CopyName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("date('now')");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("date('now')");

                    b.Property<int>("DocType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FontSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FrappeTemplateName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LetterHead")
                        .HasColumnType("TEXT");

                    b.Property<int>("Orientation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PageRange")
                        .HasColumnType("TEXT");

                    b.Property<int>("PrintEngine")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Printer")
                        .HasColumnType("TEXT");

                    b.Property<int>("Scaling")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UOM")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WarehouseFilter")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("PrinterSetting");
                });

            modelBuilder.Entity("ERPNext_PowerPlay.Models.Warehouse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("selected")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("ERPNext_PowerPlay.Models.Cred", b =>
                {
                    b.HasOne("ERPNext_PowerPlay.Models.CredList", null)
                        .WithMany("CredentialList")
                        .HasForeignKey("CredListID");
                });

            modelBuilder.Entity("ERPNext_PowerPlay.Models.CredList", b =>
                {
                    b.Navigation("CredentialList");
                });
#pragma warning restore 612, 618
        }
    }
}
